name: Build cross-compiler

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Install packages
        run: | 
          sudo apt-get update && sudo apt-get install -y gcc g++ gperf bison flex texinfo help2man make libncurses5-dev \
          python3-dev autoconf automake libtool libtool-bin gawk wget bzip2 xz-utils unzip \
          patch libstdc++6 rsync git meson ninja-build
      - name: Setup crosstool-ng
        run: |
          mkdir crosstool-ng && curl -L https://github.com/crosstool-ng/crosstool-ng/releases/download/crosstool-ng-1.28.0/crosstool-ng-1.28.0.tar.xz | tar -xJ -C crosstool-ng --strip-components=1          cd crosstool-ng
          ./configure
          make
          sudo make install
        working-directory: /tmp

      - uses: actions/checkout@v5

      - name: Build toolchain
        run: |
          ct-ng defconfig DEFCONFIG=systemcore_defconfig
          ct-ng build

      - name: Archive toolchain
        run: tar -cvzf aarch64-systemcore-linux-gnu.tar.gz aarch64-systemcore-linux-gnu/
        working-directory: ~/x-tools/
      - name: Test toolchain
        run: ./test/test-toolchain.sh -a ~/x-tools/aarch64-systemcore-linux-gnu.tar.gz -t aarch64-systemcore-linux-gnu -p aarch64-systemcore-linux-gnu- -l cxx -l fortran
      - name: Upload toolchain
        uses: actions/upload-artifact@v4
        with:
          name: aarch64-systemcore-linux-gnu
          path: ~/x-tools/aarch64-systemcore-linux-gnu.tar.gz
