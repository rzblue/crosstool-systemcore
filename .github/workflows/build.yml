name: Build cross-compiler

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
  pull_request:

jobs:
  build-linux-x64:
    runs-on: ubuntu-22.04

    steps:
      - name: Install packages
        run: | 
          sudo apt-get update && sudo apt-get install -y gcc g++ gperf bison flex texinfo help2man make libncurses5-dev \
          python3-dev autoconf automake libtool libtool-bin gawk wget bzip2 xz-utils unzip \
          patch libstdc++6 rsync git meson ninja-build
      - name: Setup crosstool-ng
        run: |
          mkdir crosstool-ng && curl -L https://github.com/crosstool-ng/crosstool-ng/releases/download/crosstool-ng-1.27.0/crosstool-ng-1.27.0.tar.xz | tar -xJ -C crosstool-ng --strip-components=1
          cd crosstool-ng
          ./configure
          make
          sudo make install
        working-directory: /tmp

      - uses: actions/checkout@v5
      - name: Disable logging
        # Progress bar spams non-interactive console
        # File log dumps environment to uploaded artifact
        run: |
          cat >> systemcore_defconfig <<EOF
          # CT_LOG_PROGRESS_BAR is not set
          # CT_LOG_TO_FILE is not set
          EOF

      - name: Build toolchain
        run: |
          ct-ng defconfig DEFCONFIG=systemcore_defconfig
          ct-ng build

      - name: Archive toolchain
        run: tar -cvzf aarch64-systemcore-linux-gnu.tar.gz aarch64-systemcore-linux-gnu/
        working-directory: /home/runner/x-tools/
      - name: Test toolchain
        run: ./test/test-toolchain.sh -a /home/runner/x-tools/aarch64-systemcore-linux-gnu.tar.gz -t aarch64-systemcore-linux-gnu -p aarch64-systemcore-linux-gnu- -l cxx -l fortran
      - name: Upload toolchain
        uses: actions/upload-artifact@v4
        with:
          name: aarch64-systemcore-linux-gnu
          path: ~/x-tools/aarch64-systemcore-linux-gnu.tar.gz
  build-macos-aarch64:
    runs-on: macos-latest

    steps:
      - name: Install packages
        run: | 
          brew install autoconf automake bash binutils gawk gnu-sed \
               gnu-tar help2man make meson ncurses ninja pkg-config texinfo libtool
      - name: Setup crosstool-ng
        run: |
          mkdir crosstool-ng && curl -L https://github.com/crosstool-ng/crosstool-ng/releases/download/crosstool-ng-1.27.0/crosstool-ng-1.27.0.tar.xz | tar -xJ -C crosstool-ng --strip-components=1
          cd crosstool-ng
          env SED=/opt/homebrew/opt/gnu-sed/libexec/gnubin/sed OBJCOPY=$(brew --prefix binutils)"/bin/objcopy" RANLIB=$(brew --prefix binutils)"/bin/ranlib" READELF=$(brew --prefix binutils)"/bin/readelf" AWK=$(brew --prefix gawk)"/bin/gawk" OBJDUMP=$(brew --prefix binutils)"/bin/objdump" BISON=$(brew --prefix bison)"/bin/bison" ./configure
          make
          sudo make install
        working-directory: /tmp
      - name: create case sensitive workspace volume for macOS
        run: |
          cd ..
          rmdir crosstool-systemcore
          hdiutil create "${HOME}/Workspace.sparseimage" -volname crosstool-systemcore -type SPARSE -size 30g -fs HFSX
          hdiutil mount "${HOME}/Workspace.sparseimage" -mountroot /Users/runner/work/crosstool-systemcore
          cd crosstool-systemcore
      - uses: actions/checkout@v5
      - name: Disable progress bar
        # Progress bar spams non-interactive console
        # File log dumps environment to uploaded artifact
        run: |
          cat >> systemcore_defconfig <<EOF
          # CT_LOG_PROGRESS_BAR is not set
          EOF
      - run: echo $PATH
      - name: Build toolchain
        run: |
          ct-ng defconfig DEFCONFIG=systemcore_defconfig
          ct-ng build
        env:
          CT_PREFIX: ${{github.workspace}}/out
      - name: Upload log on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          path: ${{github.workspace}}/build.log
      - name: Archive toolchain
        run: tar -cvzf aarch64-systemcore-linux-gnu.tar.gz aarch64-systemcore-linux-gnu/
        working-directory: out/
      - name: Test toolchain
        run: ./test/test-toolchain.sh -a ${{github.workspace}}/out/aarch64-systemcore-linux-gnu.tar.gz -t aarch64-systemcore-linux-gnu -p aarch64-systemcore-linux-gnu- -l cxx -l fortran
      - name: Upload toolchain
        uses: actions/upload-artifact@v4
        with:
          name: aarch64-systemcore-linux-gnu
          path: ${{github.workspace}}/out/aarch64-systemcore-linux-gnu.tar.gz
