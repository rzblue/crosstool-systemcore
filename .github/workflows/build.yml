name: Build cross-compiler

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
  pull_request:

jobs:
  build-linux-x64:
    strategy:
      fail-fast: false
      matrix:
        defconfig: [systemcore_defconfig, systemcore_pi4_defconfig]
        

    runs-on: ubuntu-22.04

    steps:
      - name: Set environment variables
        run: |
          echo "DEFCONFIG=${{matrix.defconfig}}" >> "$GITHUB_ENV"
          echo "TOOLCHAIN_TRIPLE=$([[ ${{matrix.defconfig}} == "systemcore_defconfig" ]] && echo "aarch64-systemcore-linux-gnu" || echo "aarch64-systemcore_pi4-linux-gnu")" >> "$GITHUB_ENV"

      - uses: actions/checkout@v5

      - name: setup crosstool
        uses: ./.github/actions/setup-crosstool-ng

      - name: cache tarballs
        id: cache
        uses: actions/cache@v4
        with:
          path: src.tar
          key: src.tar-${{runner.os}}-${{ hashFiles('install-crosstool.sh') }}-${{ hashFiles('systemcore_defconfig') }}
      - name: extract tarballs
        run: |
          tar -xvf src.tar || true
      - name: Disable logging
        # Progress bar spams non-interactive console
        # File log dumps environment to uploaded artifact
        run: |
          cat >> systemcore_defconfig <<EOF
          # CT_LOG_PROGRESS_BAR is not set
          # CT_LOG_TO_FILE is not set
          EOF
      - name: Download toolchain sources
        run: |
          mkdir -p src
          ct-ng defconfig DEFCONFIG=systemcore_defconfig
          sed -i -e '/CT_LOG_PROGRESS_BAR/s/y$/n/' .config
          sed -i -e '/CT_LOCAL_TARBALLS_DIR/s/HOME/CT_TOP_DIR/' .config
          ct-ng source
      - name: collect tarballs
        run: |
          ./dedup-tars.sh src
          echo "archiving:"
          tar -cvf src.tar src
      - name: Save sources
        uses: actions/cache/save@v4
        with:
          path: src.tar
          key: src.tar-${{runner.os}}-${{ hashFiles('install-crosstool.sh') }}-${{ hashFiles('systemcore_defconfig') }}
      - name: Build toolchain
        run: |
          ct-ng build
      - name: Archive toolchain
        run: tar -cvzf "$TOOLCHAIN_TRIPLE".tar.gz "$TOOLCHAIN_TRIPLE"/
        working-directory: /home/runner/x-tools/
      - name: Test toolchain
        run: ./test/test-toolchain.sh -a /home/runner/x-tools/"$TOOLCHAIN_TRIPLE".tar.gz -t "$TOOLCHAIN_TRIPLE" -p "$TOOLCHAIN_TRIPLE"- -l cxx -l fortran
      - name: Upload toolchain
        uses: actions/upload-artifact@v4
        with:
          name: ${{env.TOOLCHAIN_TRIPLE}}_x86_64-linux-gnu
          path: ~/x-tools/${{env.TOOLCHAIN_TRIPLE}}.tar.gz

  build-macos:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-13
            artifactId: x86_64-apple-darwin
          - os: macos-14
            artifactId: aarch64-apple-darwin
    name: build-${{matrix.os}}
    runs-on: ${{matrix.os}}
    steps:
      - name: create case sensitive workspace volume for macOS
        run: |
          cd ..
          rmdir crosstool-systemcore
          hdiutil create "${HOME}/Workspace.sparseimage" -volname crosstool-systemcore -type SPARSE -size 30g -fs HFSX
          hdiutil mount "${HOME}/Workspace.sparseimage" -mountroot /Users/runner/work/crosstool-systemcore
          cd crosstool-systemcore
      - uses: actions/checkout@v5
      - name: setup crosstool
        uses: ./.github/actions/setup-crosstool-ng

      - name: cache tarballs
        id: cache
        uses: actions/cache@v4
        with:
          path: src.tar
          key: src.tar-${{matrix.os}}-${{ hashFiles('install-crosstool.sh') }}-${{ hashFiles('systemcore_defconfig') }}
          restore-keys: |
            src.tar-${{matrix.os}}-${{ hashFiles('install-crosstool.sh') }}-
            src.tar-${{matrix.os}}-
            src.tar-${{runner.os}}-${{ hashFiles('install-crosstool.sh') }}-
            src.tar-${{runner.os}}-
      - name: extract tarballs
        run: |
          tar -xvf src.tar || true
          touch stamp
      - name: Disable progress bar
        # Progress bar spams non-interactive console
        # File log dumps environment to uploaded artifact
        # CT_COMP_TOOLS_BISON=y
        # CT_BISON_V_3_8=y
        run: |
          cat >> systemcore_defconfig <<EOF
          # CT_LOG_PROGRESS_BAR is not set
          EOF
      - name: Download toolchain sources
        run: |
          mkdir -p src
          ct-ng defconfig DEFCONFIG=systemcore_defconfig
          sed -i -e '/CT_LOG_PROGRESS_BAR/s/y$/n/' .config
          sed -i -e '/CT_LOCAL_TARBALLS_DIR/s/HOME/CT_TOP_DIR/' .config
          sed -i -e '/CT_GDB_CROSS_PYTHON/s/y$/n/' .config # MACOS SPECIFIC
          ct-ng source
        env:
          CT_PREFIX: ${{github.workspace}}/out
      - name: collect tarballs
        run: |
          ./dedup-tars.sh src
          echo "archiving:"
          tar -cvf src.tar src
      - name: Save sources
        uses: actions/cache/save@v4
        with:
          path: src.tar
          key: src.tar-${{matrix.os}}-${{ hashFiles('install-crosstool.sh') }}-${{ hashFiles('systemcore_defconfig') }}
      - name: Build toolchain
        run: |
          ct-ng build
        env:
          CT_PREFIX: ${{github.workspace}}/out
      - name: Upload log on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          path: ${{github.workspace}}/build.log
      - name: Archive toolchain
        run: tar -cvzf aarch64-systemcore-linux-gnu.tar.gz aarch64-systemcore-linux-gnu/
        working-directory: out/
      - name: Test toolchain
        run: ./test/test-toolchain.sh -a ${{github.workspace}}/out/aarch64-systemcore-linux-gnu.tar.gz -t aarch64-systemcore-linux-gnu -p aarch64-systemcore-linux-gnu- -l cxx -l fortran
      - name: Upload toolchain
        uses: actions/upload-artifact@v4
        with:
          name: aarch64-systemcore-linux-gnu_${{matrix.artifactId}}
          path: ${{github.workspace}}/out/aarch64-systemcore-linux-gnu.tar.gz
