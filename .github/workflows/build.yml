name: Build cross-compiler

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
  pull_request:

env:
  MACOSX_DEPLOYMENT_TARGET: "10.9"

jobs:
  build:
    name: Build ${{ matrix.target_triple }} for ${{matrix.host_triple}}
    strategy:
      fail-fast: false
      matrix:
        target: [systemcore, systemcore_pi4]
        host_triple: [x86_64-linux-gnu, aarch64-linux-gnu, aarch64-apple-darwin]
        include:
          - host_triple: x86_64-linux-gnu
            runner: ubuntu-22.04
          - host_triple: aarch64-linux-gnu
            runner: ubuntu-22.04-arm
          - host_triple: aarch64-apple-darwin
            runner: macos-14
          - target: systemcore
            defconfig: systemcore_defconfig
            target_triple: aarch64-systemcore-linux-gnu
          - target: systemcore_pi4
            defconfig: systemcore_pi4_defconfig
            target_triple: aarch64-systemcore_pi4-linux-gnu

    runs-on: ${{ matrix.runner }}
    steps:
      - name: create case sensitive workspace volume for macOS
        run: |
          cd ..
          rmdir crosstool-systemcore
          hdiutil create "${HOME}/Workspace.sparseimage" -volname crosstool-systemcore -type SPARSE -size 30g -fs HFSX
          hdiutil mount "${HOME}/Workspace.sparseimage" -mountroot /Users/runner/work/crosstool-systemcore
          cd crosstool-systemcore
        if: ${{ runner.os == 'macOS' }}

      - uses: actions/checkout@v5

      - name: setup crosstool
        uses: ./.github/actions/setup-crosstool-ng

      - name: cache tarballs
        id: cache
        uses: actions/cache@v4
        with:
          path: src.tar
          key: src.tar-${{matrix.runner}}-${{ hashFiles('.github/actions/setup-crosstool-ng/*') }}-${{ hashFiles(matrix.defconfig) }}
          restore-keys: |
            src.tar-${{matrix.runner}}-${{ hashFiles('.github/actions/setup-crosstool-ng/*') }}-
            src.tar-${{matrix.runner}}-
      - name: extract tarballs
        run: |
          tar -xvf src.tar || true
      - name: Configure ct-ng
        run: |
          mkdir -p src
          ct-ng defconfig DEFCONFIG=${{matrix.defconfig}}
          ./modify-config.sh CT_LOG_PROGRESS_BAR n
          if [[ $RUNNER_OS == "macOS" ]]; then
            ./modify-config.sh CT_GDB_CROSS_PYTHON n # MACOS SPECIFIC
          fi
          sed -i -e '/CT_LOCAL_TARBALLS_DIR/s/HOME/CT_TOP_DIR/' .config
      - name: Download toolchain sources
        run: |
          ct-ng source
        env:
          CT_PREFIX: ${{github.workspace}}/out
      - name: collect tarballs
        run: |
          ./dedup-tars.sh src
          echo "archiving:"
          tar -cvf src.tar src
      - name: Save sources
        uses: actions/cache/save@v4
        with:
          path: src.tar
          key: src.tar-${{matrix.runner}}-${{ hashFiles('.github/actions/setup-crosstool-ng/*') }}-${{ hashFiles(matrix.defconfig) }}
      - name: Build toolchain
        run: |
          ct-ng build
        env:
          CT_PREFIX: ${{github.workspace}}/out
      - name: Upload log on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.target_triple}}_${{matrix.host_triple}}-log
          path: ${{github.workspace}}/build.log
      - name: Archive toolchain
        run: tar -cvzf "${{matrix.target_triple}}".tar.gz "${{matrix.target_triple}}"/
        working-directory: out/
      - name: Test toolchain
        run: ./test/test-toolchain.sh -a "${{github.workspace}}/out/${{matrix.target_triple}}.tar.gz" -t "${{matrix.target_triple}}" -p "${{matrix.target_triple}}-" -l cxx -l fortran
      - name: Upload toolchain
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.target_triple}}_${{matrix.host_triple}}
          path: ${{github.workspace}}/out/${{matrix.target_triple}}.tar.gz
